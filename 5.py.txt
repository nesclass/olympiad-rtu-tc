from hashlib import sha256
from pathlib import Path
from collections import defaultdict

# Исходя из комментариев, полученных в рамках уточняющего вопроса по содержанию задачи
# (от наблюдающего № 203 аудитории 13.03.2024 ~15:00 в Детском технопарке РТУ МИРЭА)
# данная задача является креативной, и предполагает самостоятельное формирование исходной таблицы,
# разметку и обогащение полезной информацией о предлагаемых товарах

# Разметка таблицы products.txt будет иметь следующий характер:
# <Category:str>|<Product:str><Price_per_kg:float>|<Sold_Quantity:int>

# Также, важным уточнением к решению данной задачи является то,
# что в питоне не существует примитива из коробки, альтернативному hashmap (хэш-таблице),
# поэтому под хэш-таблицой в данном решении будет подразумеваться словарь,
# ключ которого является вычисленным хэшем над значением оригинального ключа--строки


# Функция для рассчитывания хэша из переданной строки
def digest(value: any) -> str:
    return sha256(value.encode()).hexdigest()


# Хэш-таблица, состоящая из пары названия продукта, преобразованного в хэш-значение, в качестве ключа
# и словаря с информацией о категории, цене за 1кг и кол-ве проданных товаров в качестве значения,
# требуемая по условию задачи, но не используемая нигде более.
hash_table = {}

# Коллекция со сведениями о доходности по каждой категории
categories = defaultdict(float)

# Информация из оригинальной инвентаризации
content = Path("./products.txt").read_text("utf-8")

# Итерация по линиям таблицы с инвентаризацией
for line in content.splitlines()[1:]:
    # Разбиение каждой линии на колонки с полезной информацией
    columns = line.split("|")

    # Экстракция всех сведений о товаре из колонок
    category_name = columns[0]
    product_name = columns[1]
    product_ppk = float(columns[2])
    product_quantity = int(columns[3])

    # Запись сведений о товарах в хэш-таблицу
    # Хэш-таблица не предусматривает наличия нескольких записей с одинаковым хэшем,
    # поэтому товары с одинаковым наименованием могут перекрывать друг-друга.
    hash_table[digest(product_name)] = {
        "Category_name": category_name,
        "Price per kg": product_ppk,
        "Sold Quantity": product_quantity
    }

    # Формирование сведений о доходности каждой категории
    categories[category_name] = product_ppk * product_quantity

# Буфер исходного файла
result = ""

# Сортировка категорий по уровню их доходности, итерация по топ-5 отсортированным категориям
for category_name, category_total in sorted(categories.items(), key=lambda x: x[1], reverse=True)[:5]:
    # Вывод наименования категории
    print(category_name)
    # Запись наименования категории в буфер
    result += f"{category_name}\n"

# Запись сведений о наиболее прибыльных категориях в файл
Path("./top5.txt").write_text(result, encoding="utf-8")
